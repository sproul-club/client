type RecruitingSeason {
  isActive: Boolean
  startTimestamp: String
  endTimestamp: String
}

type Branch {
  title: String
  description: String
}

type Clubs
  @model
  @auth(
    rules: [
      { allow: owner, operations: [create, read, update, delete] }
      {
        allow: groups
        groups: ["Admins"]
        operations: [create, read, update, delete]
      }
    ]
  )
  @index(name: "byClub", fields: ["id"]) 
{
  id: ID!
  name: String
  abbreviation: String
  description: String
  profilePhoto: String
  headingPhoto: String
  isApplicationOpen: Boolean
  isApplicationRequired: Branch
  categories: [String]
  events: [Events] @hasMany(indexName: "byClub", fields: ["id"])
  recruitingSeasons: RecruitingSeason
  numMembers: Int

  yearFounded: String
  branches: [Branch]

  website: String
  instagram: String
  linkedin: String
  facebook: String
  twitter: String
  discord: String
  email: String
}


type Events
  @model
  @auth(
    rules: [
      { allow: owner, operations: [create, read, update, delete] }
      {
        allow: groups
        groups: ["Admins"]
        operations: [create, read, update, delete]
      }
    ]
  )
  @index(name: "byClub", fields: ["clubId"]) 
{
  id: ID!
  name: String
  description: String
  startTimestamp: AWSDateTime!
  endTimestamp: AWSDateTime!
  location: String
  clubId: ID!
  club: Clubs @belongsTo(fields: ["clubId"])
}